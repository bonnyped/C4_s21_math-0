#suite s21_fmod_tests

#test s21_fmod_1
  double x = 0;
  double y = 45;
  long double orig = fmod(x, y);
  long double s21 = s21_fmod(x, y);
  ck_assert_ldouble_eq(orig, s21);

#test s21_fmod_2
  double x = -0;
  double y = 11;
  long double orig = fmod(x, y);
  long double s21 = s21_fmod(x, y);
  ck_assert_ldouble_eq(orig, s21);

#test s21_fmod_3
  double x = -0;
  double y = 11;
  long double orig = fmod(x, y);
  long double s21 = s21_fmod(x, y);
  ck_assert_ldouble_eq(orig, s21);

#test s21_fmod_4
  double x = -0.0 / 0.0;
  double y = 11;
  long double orig = fmod(x, y);
  long double s21 = s21_fmod(x, y);
  ck_assert_ldouble_nan(orig);
  ck_assert_ldouble_nan(s21);

#test s21_fmod_5
  double x = 0.0 / 0.0;
  double y = 11;
  long double orig = fmod(x, y);
  long double s21 = s21_fmod(x, y);
  ck_assert_ldouble_nan(orig);
  ck_assert_ldouble_nan(s21);

#test s21_fmod_6
  double x = 123;
  double y = 0.0 / 0.0;
  long double orig = fmod(x, y);
  long double s21 = s21_fmod(x, y);
  ck_assert_ldouble_nan(orig);
  ck_assert_ldouble_nan(s21);

#test s21_fmod_7
  double x = 123;
  double y = -0.0 / 0.0;
  long double orig = fmod(x, y);
  long double s21 = s21_fmod(x, y);
  ck_assert_ldouble_nan(orig);
  ck_assert_ldouble_nan(s21);

#test s21_fmod_8
  double x = 777;
  double y = -1.0 / 0.0;
  long double orig = fmod(x, y);
  long double s21 = s21_fmod(x, y);
  ck_assert_ldouble_eq(orig, s21);

#test s21_fmod_9
  double x = 777;
  double y = 1.0 / 0.0;
  long double orig = fmod(x, y);
  long double s21 = s21_fmod(x, y);
  ck_assert_ldouble_eq(orig, s21);

#test s21_fmod_10
  double x = 555;
  double y = -0;
  long double orig = fmod(x, y);
  long double s21 = s21_fmod(x, y);
  ck_assert_ldouble_nan(orig);
  ck_assert_ldouble_nan(s21);

#test s21_fmod_11
  double x = 555;
  double y = 0;
  long double orig = fmod(x, y);
  long double s21 = s21_fmod(x, y);
  ck_assert_ldouble_nan(orig);
  ck_assert_ldouble_nan(s21);


#test s21_fmod_12
  double x = 1.0 / 0.0;
  double y = 13;
  long double orig = fmod(x, y);
  long double s21 = s21_fmod(x, y);
  ck_assert_ldouble_nan(orig);
  ck_assert_ldouble_nan(s21);

#test s21_fmod_13
  double x = -1.0 / 0.0;
  double y = 13;
  long double orig = fmod(x, y);
  long double s21 = s21_fmod(x, y);
  ck_assert_ldouble_nan(orig);
  ck_assert_ldouble_nan(s21); 


#test s21_fmod_14
  double x = 777.777;
  double y = 12.1;
  long double orig = fmod(x, y);
  long double s21 = s21_fmod(x, y);
  ck_assert_ldouble_eq(orig, s21);

#test s21_fmod_15
  double x = 0.3;
  double y = 0.145;
  long double orig = fmod(x, y);
  long double s21 = s21_fmod(x, y);
  ck_assert_ldouble_eq(orig, s21);

#test s21_fmod_16
  double x = 0.00003;
  double y = 0.00001;
  long double orig = fmod(x, y);
  long double s21 = s21_fmod(x, y);
  ck_assert_ldouble_eq_tol(orig, s21, 10e-6);

#test s21_fmod_17
  double x = -0.0;
  double y = -1.0;
  long double orig = fmod(x, y);
  long double s21 = s21_fmod(x, y);
  ck_assert_ldouble_eq_tol(orig, s21, 10e-6);

#test s21_fmod_18
  double x = 0.0;
  double y = -1.0;
  long double orig = fmod(x, y);
  long double s21 = s21_fmod(x, y);
  ck_assert_ldouble_eq_tol(orig, s21, 10e-6);

#test s21_fmod_19
  double x = -0.0;
  double y = 1.0;
  long double orig = fmod(x, y);
  long double s21 = s21_fmod(x, y);
  ck_assert_ldouble_eq(orig, s21);

#test s21_fmod_20
  double x = 0.0;
  double y = 1.0;
  long double orig = fmod(x, y);
  long double s21 = s21_fmod(x, y);
  ck_assert_ldouble_eq_tol(orig, s21, 10e-6);

#test s21_fmod_21
  double x = 0;
  double y = 1.0;
  long double orig = fmod(x, y);
  long double s21 = s21_fmod(x, y);
  ck_assert_ldouble_eq_tol(orig, s21, 10e-6);

#test s21_fmod_22
  double x = 0;
  double y = -1.0;
  long double orig = fmod(x, y);
  long double s21 = s21_fmod(x, y);
  ck_assert_ldouble_eq_tol(orig, s21, 10e-6);

#test s21_fmod_23
  double x = 1;
  double y = -0.0;
  long double orig = fmod(x, y);
  long double s21 = s21_fmod(x, y);
  ck_assert_ldouble_nan(orig);
  ck_assert_ldouble_nan(s21);

#test s21_fmod_24
  double x = 1;
  double y = 0.0;
  long double orig = fmod(x, y);
  long double s21 = s21_fmod(x, y);
  ck_assert_ldouble_nan(orig);
  ck_assert_ldouble_nan(s21);

#test s21_fmod_25
  double x = 1;
  double y = -1.0;
  long double orig = fmod(x, y);
  long double s21 = s21_fmod(x, y);
  ck_assert_ldouble_eq_tol(orig, s21, 10e-6);

#test s21_fmod_26
  double x = 1;
  double y = 1.0;
  long double orig = fmod(x, y);
  long double s21 = s21_fmod(x, y);
  ck_assert_ldouble_eq_tol(orig, s21, 10e-6);

#test s21_fmod_27
  double x = 0.999999;
  double y = 0.31;
  long double orig = fmod(x, y);
  long double s21 = s21_fmod(x, y);
  ck_assert_ldouble_eq_tol(orig, s21, 10e-6);

  #test s21_fmod_28
  double x = 1.7;
  double y = 1.3;
  long double orig = fmod(x, y);
  long double s21 = s21_fmod(x, y);
  ck_assert_ldouble_eq_tol(orig, s21, 10e-6);

#test s21_fmod_29
  double x = 349;
  double y = 15;
  long double orig = fmod(x, y);
  long double s21 = s21_fmod(x, y);
  ck_assert_ldouble_eq(orig, s21);

#test s21_fmod_30
  double x = 1.0/3.0;
  double y = -1.0/0.0;
  long double orig = fmod(x, y);
  long double s21 = s21_fmod(x, y);
  ck_assert_ldouble_eq_tol(orig, s21, 10e-6);

#test s21_fmod_31
  double x = -123123123.123;
  double y = 6.283185;
  long double orig = fmod(x, y);
  long double s21 = s21_fmod(x, y);
  ck_assert_ldouble_eq_tol(orig, s21, 10e-6);
  for (int i = 0; i < 100; i++) {
    y += 0.1;
    orig = fmod(x, y);
    double s21 = s21_fmod(x, y);
    ck_assert_ldouble_eq(orig, s21);
  }

  #test s21_fmod_32
  double x = 4.5;
  double y = 4.6;
  long double orig = fmod(x, y);
  long double s21 = s21_fmod(x, y);
  ck_assert_ldouble_eq_tol(orig, s21, 10e-6);